/*
 * Please do not edit this file.
 * It was generated using rpcgen.
 */

#ifndef _CLAVES_INTER_H_RPCGEN
#define _CLAVES_INTER_H_RPCGEN

#include <rpc/rpc.h>

#include <pthread.h>

#ifdef __cplusplus
extern "C" {
#endif


typedef struct {
	u_int double_array_len;
	double *double_array_val;
} double_array;

struct KeyValue {
	int key;
	char *value1;
	int N_value2;
	double_array V_value2;
};
typedef struct KeyValue KeyValue;

struct d_set_value_1_argument {
	int arg1;
	char *arg2;
	int arg3;
	double_array arg4;
};
typedef struct d_set_value_1_argument d_set_value_1_argument;

struct d_modify_value_1_argument {
	int arg1;
	char *arg2;
	int arg3;
	double_array arg4;
};
typedef struct d_modify_value_1_argument d_modify_value_1_argument;

#define KEY_VALUE_SERVICE 99
#define KEY_VALUE_SERVICE_VERSION 1

#if defined(__STDC__) || defined(__cplusplus)
#define d_init 1
extern  enum clnt_stat d_init_1(int *, CLIENT *);
extern  bool_t d_init_1_svc(int *, struct svc_req *);
#define d_set_value 2
extern  enum clnt_stat d_set_value_1(int , char *, int , double_array , int *, CLIENT *);
extern  bool_t d_set_value_1_svc(int , char *, int , double_array , int *, struct svc_req *);
#define d_get_value 3
extern  enum clnt_stat d_get_value_1(int , KeyValue *, CLIENT *);
extern  bool_t d_get_value_1_svc(int , KeyValue *, struct svc_req *);
#define d_modify_value 4
extern  enum clnt_stat d_modify_value_1(int , char *, int , double_array , int *, CLIENT *);
extern  bool_t d_modify_value_1_svc(int , char *, int , double_array , int *, struct svc_req *);
#define d_delete_key 5
extern  enum clnt_stat d_delete_key_1(int , int *, CLIENT *);
extern  bool_t d_delete_key_1_svc(int , int *, struct svc_req *);
#define d_exist 6
extern  enum clnt_stat d_exist_1(int , int *, CLIENT *);
extern  bool_t d_exist_1_svc(int , int *, struct svc_req *);
extern int key_value_service_1_freeresult (SVCXPRT *, xdrproc_t, caddr_t);

#else /* K&R C */
#define d_init 1
extern  enum clnt_stat d_init_1();
extern  bool_t d_init_1_svc();
#define d_set_value 2
extern  enum clnt_stat d_set_value_1();
extern  bool_t d_set_value_1_svc();
#define d_get_value 3
extern  enum clnt_stat d_get_value_1();
extern  bool_t d_get_value_1_svc();
#define d_modify_value 4
extern  enum clnt_stat d_modify_value_1();
extern  bool_t d_modify_value_1_svc();
#define d_delete_key 5
extern  enum clnt_stat d_delete_key_1();
extern  bool_t d_delete_key_1_svc();
#define d_exist 6
extern  enum clnt_stat d_exist_1();
extern  bool_t d_exist_1_svc();
extern int key_value_service_1_freeresult ();
#endif /* K&R C */

/* the xdr functions */

#if defined(__STDC__) || defined(__cplusplus)
extern  bool_t xdr_double_array (XDR *, double_array*);
extern  bool_t xdr_KeyValue (XDR *, KeyValue*);
extern  bool_t xdr_d_set_value_1_argument (XDR *, d_set_value_1_argument*);
extern  bool_t xdr_d_modify_value_1_argument (XDR *, d_modify_value_1_argument*);

#else /* K&R C */
extern bool_t xdr_double_array ();
extern bool_t xdr_KeyValue ();
extern bool_t xdr_d_set_value_1_argument ();
extern bool_t xdr_d_modify_value_1_argument ();

#endif /* K&R C */

#ifdef __cplusplus
}
#endif

#endif /* !_CLAVES_INTER_H_RPCGEN */
